# Base image for building the app
FROM node:20.11.0-alpine AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

# Stage 1: Install production dependencies for the final image
FROM base AS prod-deps
WORKDIR /usr/src/app
COPY . . 
# Install only production dependencies for the final image
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --prod --frozen-lockfile

# Stage 2: Full build for compiling the project
FROM base AS build
WORKDIR /usr/src/app
COPY . . 
# Install all dependencies, including devDependencies
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile

# Generate Prisma client
RUN pnpm run --filter "@icewar/prisma" generate

# Build TypeScript files for the scraper package
RUN pnpm run --filter "@icewar/scraper" build

# Stage 3: Production-ready image with only necessary files
FROM base AS production
WORKDIR /usr/src/app

# Copy production dependencies from prod-deps stage
COPY --from=prod-deps /usr/src/app/node_modules /usr/src/app/node_modules

# Copy built files from the build stage
COPY --from=build /usr/src/app/scraper/dist /usr/src/app/dist


# Set environment variables
ENV NODE_ENV=production
ENV ADDRESS=0.0.0.0
ENV PORT=3000

# Expose the necessary port
EXPOSE 3000


# Start the scraper application
CMD ["node", "dist/index.mjs"]
