# Base image for building the app
FROM node:20.11.0-alpine AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

FROM base AS build
WORKDIR /usr/src/app
COPY . . 
# Install all dependencies, including devDependencies
RUN pnpm install --frozen-lockfile

# Generate Prisma client
RUN pnpm run --filter "@icewar/prisma" generate 

RUN pnpm run --filter "@icewar/prisma" build

RUN pnpm run --filter "@icewar/scraper" build

# RUN pnpm deploy --config.shamefully-hoist=true --config.shared-workspace-lockfile=false --filter "@icewar/scraper" --prod /prod/app1

FROM base AS production
WORKDIR /usr/src/app
COPY --from=build /usr/src/app/scraper/dist ./dist
COPY --from=build /usr/src/app/scraper/node_modules ./node_modules
ENV NODE_ENV=production
ENV ADDRESS=0.0.0.0
ENV PORT=3000

EXPOSE 3000
CMD ["node", "dist/index.mjs"]


# # Stage 3: Production-ready image with only necessary files
# FROM base AS production
# WORKDIR /usr/src/app

# # Copy production dependencies from prod-deps stage
# COPY --from=prod-deps /usr/src/app/node_modules /usr/src/app/node_modules

# # Copy built files from the build stage
# COPY --from=build /usr/src/app/scraper/dist /usr/src/app/dist


# # Set environment variables
# ENV NODE_ENV=production
# ENV ADDRESS=0.0.0.0
# ENV PORT=3000

# # Expose the necessary port
# EXPOSE 3000


# # Start the scraper application
# CMD ["node", "dist/index.mjs"]
